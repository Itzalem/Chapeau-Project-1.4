@model Chapeau_Project_1._4.ViewModel.MenuViewModel

@{
    ViewData["Title"] = "Menu";
    string card = "";
    string previousCategory = "";
}

<div class="text-center">
    <h1 class="display-4">Le Menu</h1>
</div>

<div>

<!--showing the card buttons to choose-->
<ul class="nav nav-pills">

    @foreach (var cardEnum in Model.CategoriesDictionary.Keys)
    {
        <li class="nav-item">
            <a class="nav-link @(Model.CardFilter == cardEnum ? "active" : "brown-border")" asp-controller="Order" asp-action="TakeOrder" asp-route-cardFilter="@cardEnum"
               asp-route-orderNumber="@ViewData["OrderNumber"]"><strong>@cardEnum</strong></a>
        </li>
    }

</ul>

<!-- Show categories according to the Card Options -->
@if (Model.CategoriesDictionary.ContainsKey(Model.CardFilter))
{
    <p><strong>Choose a Category:</strong></p>
    @foreach (var category in Model.CategoriesDictionary[Model.CardFilter])
    {
        <a class="btn btn-brown"
           asp-controller="Order"
            asp-action="TakeOrder"
            asp-route-cardFilter="@Model.CardFilter"
           asp-route-categoryFilter="@category" asp-route-orderNumber="@ViewData["OrderNumber"]">
            <strong>@category</strong>
        </a>      
    }
}

</div>

<div class="tab-content">
    <!-- show menu -->
    <div id="All" class="tab-pane fade show active">
        @foreach (var menuItem in Model.MenuItems)
        {
            if (menuItem.Card != card)
            {
                <h1 style="width: 70%; margin: 30px auto; text-align: left;">@menuItem.Card</h1>
                card = menuItem.Card;
                previousCategory = "";
            }

            if (menuItem.Category != previousCategory)
            {
                <h2 style="text-align: center; margin-top: 20px">@menuItem.Category</h2>
                previousCategory = menuItem.Category;
            }

            <div class="menu-item">
                <div class="dish-name">
                    @menuItem.MenuItemName
                    @if (menuItem.Stock <= 10 && menuItem.Stock > 0)
                    {
                        <span class="runningOut"> Running out </span>
                    }
                    else if (menuItem.Stock <= 0)
                    {
                        <span class="outOfStock"> Out of stock </span>
                    }
                </div>

                <div class="right-side">
                    <span class="price">€@menuItem.Price</span>

                    <!--To add the item to the order list-->
                    <form asp-controller="Order" asp-action="InputItemDetails" method="post">
                        <input type="hidden" name="MenuItemId" value="@menuItem.MenuItemId" />
                        <input type="hidden" name="MenuItemName" value="@menuItem.MenuItemName" />
                        <input type="hidden" name="Price" value="@menuItem.Price" />
                        <input type="hidden" name="Stock" value="@menuItem.Stock" />
                        <input type="hidden" name="Card" value="@menuItem.Card" />
                        <input type="hidden" name="Category" value="@menuItem.Category" />
                        <input type="hidden" name="OrderNumber" value="@ViewData["OrderNumber"]" />
                        @if (menuItem.Stock > 0)
                        {
                            <button type="submit" class="add-button">Add to order</button>
                        }
                    </form>
                </div>
            </div>

        }
    </div>


</div>


