@using Chapeau_Project_1._4.ViewModel
@model List<RunningOrder>

<h2 class="page-title">Orders</h2>

<div class="view-tabs">
    <button class="tab active" id="tab-running">
        <i class="fa fa-list"></i> Running Orders
    </button>
    <button class="tab" id="tab-finished"
            onclick="location.href='@Url.Action("FinishedOrders","Kitchen")'">
        <i class="fa fa-clock-o"></i> Finished Today
    </button>
    <button class="btn-refresh" onclick="location.reload()">
        <i class="fa fa-refresh"></i> Refresh
    </button>
</div>

<div class="orders-container">
    @foreach (var order in Model)
    {
        // decide card‐border color
        var statusClass = order.runningOrders.All(x => x.ItemStatus == EItemStatus.ReadyToServe)
        ? "status-completed"
        : order.runningOrders.All(x => x.ItemStatus == EItemStatus.BeingPrepared)
        ? "status-inprogress"
        : "status-default";

        <div class="order-card @statusClass">

            <!-- HEADER -->
            <header class="order-header">
                <h3>
                    <i class="fa fa-hashtag"></i>
                    Order #@order.OrderNumber
                    <span class="separator">–</span>
                    Table @order.TableNumber
                </h3>
                <div class="order-meta">
                    <span>
                        <i class="fa fa-calendar"></i>
                        Ordered: @order.OrderTime.ToString("dd/MM/yyyy hh:mm:ss tt")
                    </span>
                    <span>
                        <i class="fa fa-clock-o"></i>
                        Waiting: @(order.WaitingTime / 60)h @(order.WaitingTime % 60)m
                    </span>
                </div>

                <div class="status-dropdown">
                    <button class="btn-status">
                        <i class="fa fa-pencil"></i> Change Status
                        <i class="fa fa-caret-down"></i>
                    </button>
                    <ul class="status-menu">
                        <li onclick="updateOrderStatus(@order.OrderNumber,'Ordered')">
                            Ordered
                        </li>
                        <li onclick="updateOrderStatus(@order.OrderNumber,'BeingPrepared')">
                            Being Prepared
                        </li>
                        <li onclick="updateOrderStatus(@order.OrderNumber,'ReadyToServe')">
                            Ready to Serve
                        </li>
                    </ul>
                </div>
            </header>

            @{
                // group your RunningOrderItems by their category string
                var courseGroups = order.runningOrders
                .GroupBy(i => i.RunningOrderItemCategory.OrderItemCategory);
            }

            @foreach (var grp in order.runningOrders.GroupBy(i => i.RunningOrderItemCategory.OrderItemCategory))
            {
                <section class="course-group">
                    <h4>@grp.Key</h4>

                    <form asp-action="UpdateCourseStatus" method="post" class="status-form-course">
                        <input type="hidden" name="orderNumber" value="@order.OrderNumber" />
                        <input type="hidden" name="category" value="@grp.Key" />

                    </form>

                    <ul class="course-items">
                        @foreach (var item in grp)
                        {
                            <li class="course-item">
                                <i class="fa fa-cutlery"></i>
                                @item.RunningOrderItemCategory.OrderItemName (×@item.Quantity)
                                @* <span class="item-badge badge-@item.ItemStatus.ToString().ToLower()">
                                    @item.ItemStatus.ToString()
                                </span> *@

                                
                                <details class="item-status-dropdown">
                                    <summary class="btn-status-sm">
                                        <i class="fa fa-pencil"></i> Change Status
                                    </summary>

                                    <form asp-action="UpdateItemStatus" method="post" class="status-form-sm">
                                        <input type="hidden" name="orderItemId" value="@item.OrderItemId" />
                                        <select name="status" onchange="this.form.submit()">
                                            <option selected disabled>Change…</option>
                                            <option value="Ordered">Ordered</option>
                                            <option value="BeingPrepared">Being Prepared</option>
                                            <option value="ReadyToServe">Ready to Serve</option>
                                        </select>
                                    </form>
                                </details>
                            </li>
                        }
                    </ul>
                </section>
            }
        </div>
    }
</div>

